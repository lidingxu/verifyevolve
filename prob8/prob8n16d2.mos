model "Minimize ratio of pairwise distances"
  uses "mmxnlp"

 parameters
    n = 16       ! or 16
    d = 2        ! or 2
 end-parameters

  declarations
    x: array(1..n, 1..d) of mpvar
    t_min: mpvar
    t_max: mpvar
    r: mpvar
    obj: linctr
  end-declarations


  ! Variable bounds
  forall(i in 1..n, j in 1..d) do
    x(i,j) >= 0
    x(i,j) <= 1
  end-do

  t_min >= 0
  t_max >= 0
  r >= 0

  ! Constraints on distances
  forall(i in 1..n-1, j in i+1..n) do
    sum(k in 1..d) (x(i,k) - x(j,k))^2 >= t_min
    sum(k in 1..d) (x(i,k) - x(j,k))^2 <= 1
  end-do

  ! Fix t_max
  t_max = 1
  ! Compute ratio
  r * t_min >= 1

  obj := r

  loadprob(obj)

  !writeprob("prob8n" + n + "d" + d + ".lp","l")

  setparam("XPRS_MAXTIME", 100)
  setparam("XNLP_VERBOSE",true)
  ! Objective
  minimise(r)

  ! Solve
  writeln("Objective value: ", r.sol)
  writeln("t_max:1, t_min: ", t_min.sol)
  forall(i in 1..n, j in 1..d) writeln(i, " ", j, ": ", x(i,j).sol);
end-model
